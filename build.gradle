// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'application'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'maven central' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
}

sourceSets {
    main {
        java {
            srcDirs = ["src"]
        }
    }
}

// In this section you declare the dependencies for your production and test code
dependencies {
    compile('com.pi4j:pi4j-core:0.0.5') {
        exclude module: 'pi4j-native'
    }
    compile('com.pi4j:pi4j-device:0.0.5') {
        exclude module: 'pi4j-native'
    }
    compile('com.pi4j:pi4j-gpio-extension:0.0.5') {
        exclude module: 'pi4j-native'
    }
    
    //compile fileTree(dir: 'libs', include: '*.jar')

    // The production code uses the SLF4J logging API at compile time
    //compile 'org.slf4j:slf4j-api:1.7.5'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    //testCompile "junit:junit:4.11"
}

sourceCompatibility = 1.7
targetCompatibility = 1.7

// http://www.gradle.org/docs/current/userguide/application_plugin.html
mainClassName = "com.traviswyatt.pi.itg3205.Main"

jar {
    baseName = 'itg3205'
    version = '1.0'
    
    manifest {
        attributes 'Main-Class': mainClassName
    }
}

tasks.eclipse.doLast {
    delete ".project"
}
